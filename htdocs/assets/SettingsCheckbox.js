import{_ as c,e as l,a5 as u,o,c as n,j as h,v as d,a as i,z as r,q as _,t as p,k as m}from"./index.js";const g={name:"SettingsCheckbox",props:["category_name","option_name"],data(){return{timerDelay:2e3,timerId:-1,statusUpdate:""}},computed:{option(){const t=this.$store.getters.settings_option(this.category_name,this.option_name);return t||{category:this.category_name,name:this.option_name,value:!1}},info(){return this.is_success?this.$t("setting.saved"):this.is_error?this.$t("setting.not-saved"):""},is_success(){return this.statusUpdate==="success"},is_error(){return this.statusUpdate==="error"}},methods:{update_setting(){this.timerId=-1;const t={category:this.category_name,name:this.option_name,value:this.option.value};l.settings_update(this.category_name,t).then(()=>{this.$store.commit(u,t),this.statusUpdate="success"}).catch(()=>{this.statusUpdate="error"}).finally(()=>{this.timerId=window.setTimeout(this.clear_status,this.timerDelay)})},clear_status(){this.is_error&&(this.option.value=!this.option.value),this.statusUpdate=""}}},f={class:"field"},v=["id"],y=["for"],k=["textContent"],x={key:0,class:"help"};function C(t,s,U,b,S,e){return o(),n("div",f,[h(i("input",{id:e.option.name,"onUpdate:modelValue":s[0]||(s[0]=a=>e.option.value=a),type:"checkbox",class:"switch is-rounded mr-2",onChange:s[1]||(s[1]=(...a)=>e.update_setting&&e.update_setting(...a))},null,40,v),[[d,e.option.value]]),i("label",{class:"pt-0",for:e.option.name},[r(t.$slots,"label")],8,y),i("i",{class:_(["is-size-7",{"has-text-info":e.is_success,"has-text-danger":e.is_error}]),textContent:p(e.info)},null,10,k),t.$slots.info?(o(),n("p",x,[r(t.$slots,"info")])):m("",!0)])}const D=c(g,[["render",C]]);export{D as S};
